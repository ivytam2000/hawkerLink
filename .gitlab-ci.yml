stages:
    - compile
    - test
    - deploy

build:
  image: 
  stage: compile
  script:
    - echo "Compiling..."
    # Compile python files, do not recurse into sub-directories
    - python3 -m compileall api -l 
    # Compile node files and check types
    # - npm run flow

frontend-test:
  stage: test
  script:
    - echo "Testing frontend..."
    # Build docker image and run tests using npm test
    - docker build -t frontend-test-docker-image client/
    - cd client && docker run frontend-test-docker-image npm test -- --watchAll=false

backend-test:
  stage: test
  script:
    # Build docker image and run pytest
    - docker build -t backend-test-docker-image api/
    - docker run backend-test-docker-image pytest

deploy-to-vm:
  stage: deploy
  script:
    - echo "POSTGRES_DB=$PROD_POSTGRES_DB" >> .env
    - echo "POSTGRES_USER=$PROD_POSTGRES_USER" >> .env
    - echo "POSTGRES_PASSWORD=$PROD_POSTGRES_PASSWORD" >> .env
    - docker-compose down --remove-orphans
    - docker-compose up -d --build
  # Additional options if we want to
  # when: manual
  # only:
  #   - master